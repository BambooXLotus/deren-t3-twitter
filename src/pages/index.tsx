import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import { Avatar, AvatarFallback, AvatarImage } from "~/components/ui/Avatar";
import { Input } from "~/components/ui/Input";

import { type RouterOutputs, api } from "~/utils/api";

type CreatePostWizardProps = {
  id?: string;
};

const CreatePostWizard: React.FC<CreatePostWizardProps> = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <div className="space-2 flex w-full items-center gap-2">
      <Avatar>
        <AvatarImage src={user.profileImageUrl} />
        <AvatarFallback>DS</AvatarFallback>
      </Avatar>
      <Input className="flex-1" placeholder="Type a post..." />
    </div>
  );
};

type PostWithAuthor = RouterOutputs["post"]["getAll"][number];
type PostViewProps = {
  postWithAuthor: PostWithAuthor;
};

const PostView: React.FC<PostViewProps> = ({
  postWithAuthor: { post, author },
}) => {
  return (
    <div className="flex gap-2 border-b border-slate-200 p-3 ">
      {author && (
        <Avatar>
          <AvatarImage src={author.profileImageUrl} />
          <AvatarFallback>DS</AvatarFallback>
        </Avatar>
      )}
      <div className="flex flex-col">
        <span className="text-xs text-slate-400">
          {`@${author.username}`} Â·
        </span>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const user = useUser();
  const { data: posts, isLoading } = api.post.getAll.useQuery();

  if (isLoading) return <div>Loading...</div>;

  if (!posts) return <div>Something wong</div>;

  return (
    <>
      <Head>
        <title>Deren T3 Twitter</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center bg-gray-800 text-white">
        <div className="w-full border-x border-slate-200 md:max-w-3xl">
          <div className="flex border-b border-slate-200 p-4">
            <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" />
            <div>{!user.isSignedIn && <SignInButton />}</div>

            {user.isSignedIn && (
              <div className="w-full">
                <CreatePostWizard />
                <SignOutButton />
              </div>
            )}
          </div>

          <div className="space-y-4">
            {posts?.map((post) => (
              <PostView key={post.post.id} postWithAuthor={post} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
